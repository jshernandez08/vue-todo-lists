{"remainingRequest":"/home/sebas/vue-todo-lists/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sebas/vue-todo-lists/src/components/TodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sebas/vue-todo-lists/src/components/TodoList.vue","mtime":1620697797760},{"path":"/home/sebas/vue-todo-lists/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sebas/vue-todo-lists/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdUb2RvTGlzdCcsCiAgICBkYXRhOiBmdW5jdGlvbigpewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHRvZGF5OiBtb21lbnQoKS5mb3JtYXQoJ01NTU0gRG8gWVlZWScpLAogICAgICAgICAgICBkYXlXZWVrOiBtb21lbnQoKS5mb3JtYXQoJ2RkZGQnKSwKICAgICAgICAgICAgY2hlY2tlZEFsbFRhc2tDb21wbGV0ZWQ6IGZhbHNlLAogICAgICAgICAgICBmaWx0ZXJCeTogImFsbCIsCiAgICAgICAgICAgIHRvZG9MaXN0czogW3sKICAgICAgICAgICAgICAgIF9pZDogMSwKICAgICAgICAgICAgICAgIHRpdGxlOiAiTXkgZmlydHMgdGFzayIsCiAgICAgICAgICAgICAgICBjb21wbGV0ZWQ6IGZhbHNlLAogICAgICAgICAgICAgICAgZWRpdGluZzogZmFsc2UKICAgICAgICAgICAgfV0KICAgICAgICB9CiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgICB0b2RvTGlzdHM6IHsKICAgICAgICAgICAgZGVlcDogdHJ1ZSwKICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24obmV3VmFsdWUpewogICAgICAgICAgICAgICAgaWYgKCFuZXdWYWx1ZS5sZW5ndGgpewogICAgICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tlZEFsbFRhc2tDb21wbGV0ZWQgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrZWRBbGxUYXNrQ29tcGxldGVkID0gdGhpcy50b3RhbFRhc2tUb0RvID09PSAwOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBhZGRUYXNrOiBmdW5jdGlvbihlKXsKICAgICAgICAgICAgdmFyIHRhc2sgPSBlLnRhcmdldC52YWx1ZTsKICAgICAgICAgICAgaWYgKHRhc2sudHJpbSgpLmxlbmd0aCA9PT0gMCl7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy50b2RvTGlzdHMucHVzaCh7CiAgICAgICAgICAgICAgICBfaWQ6IHRoaXMubGFzdElkLAogICAgICAgICAgICAgICAgdGl0bGU6IHRhc2ssCiAgICAgICAgICAgICAgICBjb21wbGV0ZWQ6IGZhbHNlLAogICAgICAgICAgICAgICAgZWRpdGluZzogZmFsc2UKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGUudGFyZ2V0LnZhbHVlID0gIiI7CiAgICAgICAgfSwKICAgICAgICBlZGl0VGFzazogZnVuY3Rpb24odGFzayl7CiAgICAgICAgICAgIHRhc2suZWRpdGluZyA9IHRydWU7CiAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuJHJlZnNbImlucHV0RWRpdFRhc2stIiArIHRhc2suX2lkXVswXS5mb2N1cygpOwogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIG9uRWRpdFRhc2s6IGZ1bmN0aW9uKHRhc2tJZCwgZSl7CiAgICAgICAgICAgIHZhciB0YXNrID0gZS50YXJnZXQudmFsdWU7CiAgICAgICAgICAgIGlmICh0YXNrLnRyaW0oKS5sZW5ndGggPT09IDApewogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMudG9kb0xpc3RzID0gdGhpcy50b2RvTGlzdHMubWFwKGZ1bmN0aW9uKHRvZG8pewogICAgICAgICAgICAgICAgaWYgKHRvZG8uX2lkID09PSB0YXNrSWQpewogICAgICAgICAgICAgICAgICAgIHRvZG8udGl0bGUgPSB0YXNrOwogICAgICAgICAgICAgICAgICAgIHRvZG8uZWRpdGluZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgIHJldHVybiB0b2RvOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIHRvZG87CiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgY2FuY2VsRWRpdDogZnVuY3Rpb24odGFzayl7CiAgICAgICAgICAgIHRhc2suZWRpdGluZyA9IGZhbHNlOwogICAgICAgIH0sCiAgICAgICAgcmVtb3ZlVGFzazogZnVuY3Rpb24odGFza0lkKXsKICAgICAgICAgICAgdGhpcy50b2RvTGlzdHMgPSB0aGlzLnRvZG9MaXN0cy5maWx0ZXIoKHRhc2spID0+IHsKICAgICAgICAgICAgICAgIHJldHVybiB0YXNrLl9pZCAhPT0gdGFza0lkOwogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIG1hcmtBbGxUYXNrc0NvbXBsZXRlZDogZnVuY3Rpb24oY2hlY2tlZCl7CiAgICAgICAgICAgIHRoaXMudG9kb0xpc3RzLmZvckVhY2goKHRhc2spID0+IHsKICAgICAgICAgICAgICAgIHRhc2suY29tcGxldGVkID0gY2hlY2tlZDsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBjbGVhckFsbFRhc2tzQ29tcGxldGVkOiBmdW5jdGlvbigpewogICAgICAgICAgICB0aGlzLnRvZG9MaXN0cyA9IHRoaXMudG9kb0xpc3RzLmZpbHRlcigodGFzaykgPT4gewogICAgICAgICAgICAgICAgcmV0dXJuICF0YXNrLmNvbXBsZXRlZDsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBvbkZpbHRlckJ5OiBmdW5jdGlvbihmaWx0ZXIpewogICAgICAgICAgICB0aGlzLmZpbHRlckJ5ID0gZmlsdGVyOwogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIGxhc3RJZDogZnVuY3Rpb24oKXsKICAgICAgICAgICAgaWYgKCF0aGlzLnRvZG9MaXN0cy5sZW5ndGgpewogICAgICAgICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRoaXMudG9kb0xpc3RzW3RoaXMudG9kb0xpc3RzLmxlbmd0aCAtIDFdLl9pZCArIDE7CiAgICAgICAgfSwKICAgICAgICB0b3RhbFRhc2tUb0RvOiBmdW5jdGlvbigpewogICAgICAgICAgICBpZiAoIXRoaXMudG9kb0xpc3RzLmxlbmd0aCl7CiAgICAgICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdGhpcy50b2RvTGlzdHMuZmlsdGVyKCh0YXNrKSA9PiB7CiAgICAgICAgICAgICAgICByZXR1cm4gIXRhc2suY29tcGxldGVkOwogICAgICAgICAgICB9KS5sZW5ndGg7CiAgICAgICAgfSwKICAgICAgICBoYXNUYXNrc0NvbXBsZXRlZDogZnVuY3Rpb24oKXsKICAgICAgICAgICAgcmV0dXJuIHRoaXMudG90YWxUYXNrVG9Db21wbGV0ZWQgPiAwOwogICAgICAgIH0sCiAgICAgICAgdG9kb0xpc3RzRmlsdGVyZWQ6IGZ1bmN0aW9uKCl7CiAgICAgICAgICAgIGlmICh0aGlzLmZpbHRlckJ5ID09PSAiYWxsIil7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy50b2RvTGlzdHM7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHRoaXMuZmlsdGVyQnkgPT09ICJjb21wbGV0ZWQiKXsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnRvZG9MaXN0cy5maWx0ZXIoKHRhc2spID0+IHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFzay5jb21wbGV0ZWQ7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodGhpcy5maWx0ZXJCeSA9PT0gIm5vdF9jb21wbGV0ZWQiKXsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnRvZG9MaXN0cy5maWx0ZXIoKHRhc2spID0+IHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gIXRhc2suY29tcGxldGVkOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["TodoList.vue"],"names":[],"mappingsfile":"TodoList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"box\">\n    <div class=\"columns\">\n        <div class=\"column\">{{  today }}</div>\n        <div class=\"column\">{{ dayWeek  }}</div>\n    </div>\n    <b-field>\n        <input\n            type=\"text\"\n            class=\"input is-success\"\n            placeholder=\"Add new task\"\n            @keyup.enter=\"addTask\" \n        />\n    </b-field><br/>\n    <div v-for=\"task in todoListsFiltered\" :key=\"task._id\">\n        <div class=\"columns\">\n            <div class=\"column\">\n                <span\n                    v-if=\"!task.editing\"\n                    :class=\"{ completed: task.completed }\"\n                    @dblclick=\"editTask(task)\"\n                >\n                    {{ task.title }}\n                </span>\n                <input\n                    v-else\n                    type=\"text\"\n                    class=\"input is-success\"\n                    :value=\"task.title\"\n                    :ref=\"'inputEditTask-' + task._id\"\n                    @keyup.enter=\"onEditTask(task._id, $event)\"\n                    @blur=\"onEditTask(task._id, $event)\"\n                    @keyup.esc=\"cancelEdit(task)\"\n                />\n            </div>\n            <div class=\"column\">\n                <b-checkbox\n                    v-model=\"task.completed\"\n                    type=\"is-success\"\n                >\n                </b-checkbox>\n                <b-button\n                    type=\"is-danger\"\n                    size=\"is-small\"\n                    @click=\"removeTask(task._id)\"\n                >\n                    X\n                </b-button>\n            </div>\n        </div>\n    </div>\n    <hr/>\n    <div v-show=\"filterBy === 'all'\">\n        <div class=\"columns\">\n            <div class=\"column\">\n                <p style=\"font-size: 18px;\">\n                    <b-checkbox\n                        type=\"is-success\"\n                        v-model=\"checkedAllTaskCompleted\"\n                        @input=\"markAllTasksCompleted\"\n                    >\n                        Mark all completed / <i>{{ totalTaskToDo }} tasks to do</i>\n                    </b-checkbox>\n                </p>\n            </div>\n            <div class=\"column\">\n                <b-button\n                    type=\"is-info is-light\"\n                    v-if=\"hasTasksCompleted\"\n                    @click=\"clearAllTasksCompleted\"\n                    style=\"margin-top: -10px;\"\n                >\n                    Clear all completed\n                </b-button>\n            </div>\n        </div>\n        <hr/>\n    </div>\n    <p style=\"font-size: 18px;\">\n        Filter by\n    </p>\n    <div class=\"buttons has-addons\">\n        <button\n            class=\"button\"\n            :class=\"{'is-success is-light': filterBy === 'all'}\"\n            @click=\"onFilterBy('all')\"\n        >\n            All\n        </button>\n        <button\n            class=\"button\"\n            :class=\"{'is-success is-light': filterBy === 'completed'}\"\n            @click=\"onFilterBy('completed')\"\n        >\n            Completed\n        </button>\n        <button\n            class=\"button\"\n            :class=\"{'is-success is-light': filterBy === 'not_completed'}\"\n            @click=\"onFilterBy('not_completed')\"\n        >\n            Not completed\n        </button>\n    </div>\n  </div>\n</template>\n\n<script>\n    import moment from 'moment';\n\n    export default {\n        name: 'TodoList',\n        data: function(){\n            return {\n                today: moment().format('MMMM Do YYYY'),\n                dayWeek: moment().format('dddd'),\n                checkedAllTaskCompleted: false,\n                filterBy: \"all\",\n                todoLists: [{\n                    _id: 1,\n                    title: \"My firts task\",\n                    completed: false,\n                    editing: false\n                }]\n            }\n        },\n        watch: {\n            todoLists: {\n                deep: true,\n                handler: function(newValue){\n                    if (!newValue.length){\n                        this.checkedAllTaskCompleted = false;\n                        return;\n                    }\n                    this.checkedAllTaskCompleted = this.totalTaskToDo === 0;\n                }\n            }\n        },\n        methods: {\n            addTask: function(e){\n                var task = e.target.value;\n                if (task.trim().length === 0){\n                    return;\n                }\n                this.todoLists.push({\n                    _id: this.lastId,\n                    title: task,\n                    completed: false,\n                    editing: false\n                });\n                e.target.value = \"\";\n            },\n            editTask: function(task){\n                task.editing = true;\n                this.$nextTick(() => {\n                    this.$refs[\"inputEditTask-\" + task._id][0].focus();\n                });\n            },\n            onEditTask: function(taskId, e){\n                var task = e.target.value;\n                if (task.trim().length === 0){\n                    return;\n                }\n                this.todoLists = this.todoLists.map(function(todo){\n                    if (todo._id === taskId){\n                        todo.title = task;\n                        todo.editing = false;\n                        return todo;\n                    }\n                    return todo;\n                });\n            },\n            cancelEdit: function(task){\n                task.editing = false;\n            },\n            removeTask: function(taskId){\n                this.todoLists = this.todoLists.filter((task) => {\n                    return task._id !== taskId;\n                });\n            },\n            markAllTasksCompleted: function(checked){\n                this.todoLists.forEach((task) => {\n                    task.completed = checked;\n                });\n            },\n            clearAllTasksCompleted: function(){\n                this.todoLists = this.todoLists.filter((task) => {\n                    return !task.completed;\n                });\n            },\n            onFilterBy: function(filter){\n                this.filterBy = filter;\n            }\n        },\n        computed: {\n            lastId: function(){\n                if (!this.todoLists.length){\n                    return 1;\n                }\n                return this.todoLists[this.todoLists.length - 1]._id + 1;\n            },\n            totalTaskToDo: function(){\n                if (!this.todoLists.length){\n                    return 0;\n                }\n                return this.todoLists.filter((task) => {\n                    return !task.completed;\n                }).length;\n            },\n            hasTasksCompleted: function(){\n                return this.totalTaskToCompleted > 0;\n            },\n            todoListsFiltered: function(){\n                if (this.filterBy === \"all\"){\n                    return this.todoLists;\n                }\n                if (this.filterBy === \"completed\"){\n                    return this.todoLists.filter((task) => {\n                        return task.completed;\n                    });\n                }\n                if (this.filterBy === \"not_completed\"){\n                    return this.todoLists.filter((task) => {\n                        return !task.completed;\n                    });\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .completed {\n        text-decoration: line-through;\n        color: grey;\n    }\n</style>\n"]}]}