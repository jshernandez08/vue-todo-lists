{"remainingRequest":"/home/sebas/vue-todo-lists/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/sebas/vue-todo-lists/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/sebas/vue-todo-lists/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sebas/vue-todo-lists/src/components/TodoList.vue?vue&type=template&id=3de47834&scoped=true&","dependencies":[{"path":"/home/sebas/vue-todo-lists/src/components/TodoList.vue","mtime":1620697797760},{"path":"/home/sebas/vue-todo-lists/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sebas/vue-todo-lists/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/sebas/vue-todo-lists/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sebas/vue-todo-lists/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}